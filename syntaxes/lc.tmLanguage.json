{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Lambda Code",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#datatype"
		},
		{
			"include": "#comments"
		},
		{
			"include":"#func&class"
		},
		{
			"include":"#strings"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name":"keyword.control.lc",
					"match":"\\b(endif|endfor|endwhile|for|while|in)\\b"
				},
				{
					"name":"constant.language.lc",
					"match":"\\b(true|false)\\b"
				},
				{
					"name":"keyword.control.lc",
					"match":"(?<!.)#import(\\s+)?(?=(\".*\"))"
				},
				{
					"name":"keyword.control.lc",
					"match":"\\binherits\\b"
				},
				{
					"name":"keyword.control.conditional.lc",
					"match": "\\b(if|else|elseif)\\b"
				},
				{
					"name":"keyword.control.flow.lc",
					"match": "\\b(break|continue|return)\\b"
				},
				{
					"name":"keyword.control.operator.lc",
					"match":"\\b(and|or)\\b"
				}
			]
		},
		"datatype": {
			"patterns": [
				{
					"name": "entity.name.type.lc",
					"match": "\\b(int|string|float|array)\\b"
				},
                {
                    "name":"storage.type.lc",
                    "match":"\\b(long|const)\\b"
                },
				{
					"name": "constant.numeric.lc",
					"match":"\\b\\d+\\b"
				},
				{
					"name":"storage.type.var.lc",
					"match":"(?<=array )\\w+"
				}
			]
		},
		"func&class": {
			"patterns": [
				{
					"name":"entity.name.function.lc",
					"match": "(?<=func) (\\w+)(?=\\((.*)?\\))"
				},
				{
					"name":"storage.type.function",
					"match": "\\b(func|endfunc)\\b"
				},
				{
					"name":"support.function.builtin.lc",
					"match":"(print)(?=\\(.*?\\))"
				},
				{
					"begin":"\\b(class)\\b( (.*)\\((.*)?\\))?",
					"patterns": [
						{"include": "$self"}
					],
					"beginCaptures":{
						"1":{"name":"storage.type.class.lc"},
						"3":{"name":"entity.name.class.lc"},
						"4":{"name":"variable.parameter.class.lc"}

					},
					"end":"endclass",
					"endCaptures":{
						"0":{"name":"storage.type.class.lc"}
					}
				}
			]
		},
		"comments":{
			"patterns": [
				{
					"name":"comment.block",
					"begin": "///",
					"end": "///"
				},
				{
					"name":"comment.line",
					"match": "//.*"
				}
			]
		},
		"strings":{
			"patterns": [
				{
					"name": "string.quoted.multi.lc",
					"begin": "(\\'\\'\\'|\"\"\")",
					"end": "(\\'\\'\\'|\"\"\")"
				},
				{
					"name":"string.quoted.lc",
					"match":"(\".*?\"|\\'.*?\\')"
				}
			]
		}
	},
	"scopeName": "source.lc"
}