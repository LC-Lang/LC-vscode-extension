{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Lambda Code",
	"patterns": [
        {
            "include": "#comments"
		},
        {
            "include": "#keywords"
        },
		{
            "include":"#func&class"
		},
        {
            "include": "#datatype"
        },
		{
			"include":"#strings"
		}
	],
	"repository": {
        "func&class": {
            "patterns": [
                {
                    "name":"entity.name.function.lc",
                    "match": "(?<=func) (\\w+)(?=\\((.*)?\\))"
                },
                {
                    "name":"storage.type.function.lc",
                    "match": "\\b(func|endfunc)\\b"
                },
                {
                    "name":"support.function.builtin.lc",
                    "match":"(print|input|range|find|count|findall|string|int|float|bool|len|exit)(?=\\(.*?\\))"
                },
                {
                    "name": "entity.name.function.lc",
                    "match": "\\w+(?=\\(.*\\))"
                },
                {
                    "begin":"\\b(class)\\b\\s(.+)\\((.*?)\\)",
                    "patterns": [
                        {"include": "$self"}
                    ],
                    "beginCaptures":{
                        "1":{"name":"storage.type.class.lc"},
                        "2":{"name":"entity.name.class.lc"},
                        "3":{"patterns": [{"include": "$self"}]}

                    },
                    "end":"(endclass)",
                    "endCaptures":{
                        "0":{"name":"storage.type.class.lc"}
                    }
                }
            ]
        },
        "comments":{
            "patterns": [
                {
                    "name":"comment.block",
                    "begin": "///",
                    "end": "///"
                },
                {
                    "name":"comment.line",
                    "match": "//.*"
                }
            ]
        },
		"keywords": {
			"patterns": [
                {
                    "name":"keyword.operator.arithmetic.lc",
                    "match": "(\\+|\\-|\\*|\\/|\\%)(?!=)"
                },
                {
                    "name":"keyword.operator.bitwise.lc",
                    "match": "(&|\\||\\^|\\~|<<|>>)(?!=)"
                },
                {
                    "name": "keyword.operator.assignment.lc",
                    "match": "(=|\\+\\+|--|\\+=|-=|\\*=|\/=)(?!=)"
                },
                {
                    "name": "keyword.operator.comparison.lc",
                    "match": "(==|\\!=|\\<=|\\>=|\\<|\\>)(?!=)"
                },
				{
					"name":"keyword.control.lc",
					"match":"\\b(endif|endfor|endwhile|for|while|in|override|private|public|protected|type|as)\\b"
				},
				{
					"name":"constant.language.lc",
					"match":"\\b(true|false)\\b"
				},
				{
					"name":"keyword.control.import.lc",
					"match":"(?<!.)#import(\\s+)?(?=(.*))"
				},
				{
					"name":"keyword.class.lc",
					"match":"\\binherits\\b"
				},
				{
					"name":"keyword.control.conditional.lc",
					"match": "\\b(if|else|elseif)\\b"
				},
				{
					"name":"keyword.control.flow.lc",
					"match": "\\b(break|continue|return)\\b"
				},
				{
					"name":"keyword.control.operator.lc",
					"match":"\\b(and|or)\\b"
				}
			]
		},
		"datatype": {
			"patterns": [
				{
					"name": "entity.name.type.lc",
					"match": "\\b(int|string|float|bool|list|void)\\b"
				},
                {
                    "name":"storage.type.lc",
                    "match":"\\b(long|const)\\b"
                },
				{
					"name": "constant.numeric.lc",
					"match":"\\b\\d+\\b"
				}
			]
		},
		"strings":{
			"patterns": [
                {
                    "name":"string.quoted.double",
                    "begin": "\"",
                    "end": "\""
                },
                {
                    "name":"string.quoted.single",
                    "begin": "'",
                    "end": "'"
                }
			]
		}
	},
	"scopeName": "source.lc"
}